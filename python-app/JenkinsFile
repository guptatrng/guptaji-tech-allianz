pipeline {
    
    agent {
        label 'default'
    }

    environment {
        DOCKERHUB_USER = "guptatrng"
        APP_NAME = "guptaji-tech-allianz"
    }

    stages {

        stage('Clone Repo') {
            steps {
                git url: 'https://github.com/guptatrng/guptaji-tech-allianz.git', branch: 'main'
            }
        }

        stage('Read Control file') {
            steps {
                script {
                    DEPLOY_TARGET = readFile('python-app/blue-green-control.txt').trim()
                    echo "Deploy target: ${DEPLOY_TARGET}"
                }
            }
        }

        stage('Install Dependencies') {
            steps {
                script {
                    sh """
                        cd python-app/${DEPLOY_TARGET}
                        python3 -m venv venv
                        . venv/bin/activate
                        pip install -r requirements.txt
                    """
                }
            }
        }
        
        stage('Build Docker Image') {
            steps {
                script {
                    COMMIT_ID = sh(returnStdout: true, script: 'git rev-parse --short HEAD').trim()
                    IMAGE_TAG = "${DOCKERHUB_USER}/${APP_NAME}-${DEPLOY_TARGET}:${COMMIT_ID}"

                    sh """
                        cd python-app/${DEPLOY_TARGET}
                        docker build -t ${IMAGE_TAG} .
                        docker images
                    """
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'dockerhub-creds', usernameVariable: 'DOCKERHUB_USERNAME', passwordVariable: 'DOCKERHUB_PASSWORD')]) {
                    script {
                        sh """
                            echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
                            docker push ${IMAGE_TAG}
                        """
                    }
                }
            }
        }

        stage('Update Deployment YAML with New Image') {
            steps {
                script {
                    echo "Replacing image placeholder in deployment YAML with ${IMAGE_TAG}"
                    sh """
                        cd python-app/${DEPLOY_TARGET}
                        sed -i 's|guptatrng/guptaji-tech-allianz-${DEPLOY_TARGET}:.*|${IMAGE_TAG}|g' deployment.yaml
                        cat deployment.yaml
                    """
                }
            }
        }
    }
}